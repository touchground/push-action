name: 'Push with Fast-Forward Pull, Merge and Rebase Fallback'
description: 'Pushes to a remote repository, and if there is a failure, tries pull with fast-forward first before pull with merge and then rebase'

inputs:
  token:
    required: false
    default: ${{ github.token }}
outputs:
  commitHash:
    description: 'The commit hash of the pushed commit'
    value: ${{ steps.hash.outputs.commitHash }}

runs:
  using: "composite"
  steps:
    - name: Configure Git
      run: |
        git config --local user.email "$(git show -s --format='%ae' HEAD)";
        git config --local user.name  "$(git show -s --format='%an' HEAD)";
      shell: bash

    - name: Push with Rebase Retry
      run: |
        set -e;
        for i in {1..5}; do
          # Check if GitHub rate limit is approaching
          rate_limit=$(curl -s -H "Authorization: token ${{ inputs.token }}" https://api.github.com/rate_limit | jq '.resources.core.remaining')
          echo "GitHub rate limit remaining: $rate_limit"
          if [ "$rate_limit" -lt 15 ]; then
            echo "Approaching GitHub rate limit. Sleeping for 1 minute..."
            sleep 60
          fi
         
          git push origin $(git branch --show-current) && break || (
            # echo "==> Try pull fast-forward..." && 
            # git pull --ff-only origin $(git branch --show-current) && 
            # git push origin $(git branch --show-current) && break || 
            # echo "==> Try pull merge..." && 
            # git pull --no-rebase origin $(git branch --show-current) && 
            # git push origin $(git branch --show-current) && break || 
            # echo "git merge --abort" &&
            # git merge --abort &&
            # echo "==> Try pull rebase..." && 
            # git pull --rebase origin $(git branch --show-current) && 
            # git push origin $(git branch --show-current) && break ||  
            # echo "git rebase --skip" &&

            echo "" && echo "## git reset" &&
            git reset --hard HEAD loadtest.txt &&
            # git commit -m "Rebase to adjust same file conflict" &&
            echo "" && echo "## git pull --rebase origin $(git branch --show-current)" &&
            git pull --rebase origin $(git branch --show-current) && 
            # git push origin $(git branch --show-current) && break ||
            echo "## Readd" &&
            git add loadtest.txt && git rebase --continue &&
            git commit -m "Rebase to adjust same file conflict" &&
            echo "## git push" &&
            git push origin $(git branch --show-current) && break
          ) || 
          echo "##### loop ($i)... #####" && echo ""
          if [ $i -eq 5 ]; then
            echo "::error::Failed to push changes to remote"
            exit 1
          fi
          sleep 0.2
        done
      shell: bash

    - name: Output Hash
      id: hash
      run: |
        commitHash=$(git rev-parse HEAD | cut -c 1-7)
        echo "CommitHash: $commitHash"
        echo "commitHash=$commitHash" >> $GITHUB_OUTPUT
      shell: bash
