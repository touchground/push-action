name: 'Push with Fast-Forward Pull, Merge and Rebase Fallback'
description: 'Pushes to a remote repository, and if there is a failure, tries pull with fast-forward first before pull with merge and then rebase'

inputs:
  token:
    required: false
    default: ${{ github.token }}
outputs:
  commitHash:
    description: 'The commit hash of the pushed commit'
    value: ${{ steps.hash.outputs.commitHash }}

runs:
  using: "composite"
  steps:
    - name: Configure Git
      run: |
        git config --local user.email "$(git show -s --format='%ae' HEAD)";
        git config --local user.name  "$(git show -s --format='%an' HEAD)";
      shell: bash

    - name: Push with Rebase Retry
      run: |
        set -e;
        for i in {1..50}; do
          echo " " && echo "------- Starting push loop $i -------"
          # Check if GitHub rate limit is approaching
          rate_limit=$(curl -s -H "Authorization: token ${{ inputs.token }}" https://api.github.com/rate_limit | jq '.resources.core.remaining')
          echo "GitHub rate limit remaining: $rate_limit"
          if [ "$rate_limit" -lt 15 ]; then
            echo "Approaching GitHub rate limit. Sleeping for 1 minute..."
            sleep 60
          fi 
          git -c advice.pushNonFastForward=false push origin $(git branch --show-current) --quiet && break || {
            echo "  ==> Trying pull fast-forward..." && 
            git pull --ff-only origin $(git branch --show-current) > /dev/null 2>&1 && 
            git -c advice.pushNonFastForward=false push origin $(git branch --show-current) --quiet && break || 
            echo "  ==> Trying pull merge..." && 
            git pull --no-rebase origin $(git branch --show-current) > /dev/null 2>&1 && 
            git -c advice.pushNonFastForward=false push origin $(git branch --show-current) --quiet && break || 
            echo "  ==> Trying pull rebase..." && 
            git pull --rebase origin $(git branch --show-current) > /dev/null 2>&1 && 
            git -c advice.pushNonFastForward=false push origin $(git branch --show-current) --quiet && break 
          } || 
          if [ $i -eq 50 ]; then
            echo "::error::Failed to push changes to remote"
            exit 1
          fi
          sleep 0.1
        done
      shell: bash

    - name: Output Hash
      id: hash
      run: |
        commitHash=$(git rev-parse HEAD | cut -c 1-7)
        echo "CommitHash: $commitHash"
        echo "commitHash=$commitHash" >> $GITHUB_OUTPUT
      shell: bash
